<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Codez Galore]]></title>
  <link href="http://JuliaLovel.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://JuliaLovel.github.io/"/>
  <updated>2013-08-12T12:18:19-05:00</updated>
  <id>http://JuliaLovel.github.io/</id>
  <author>
    <name><![CDATA[Julia Lovel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SOLVED: Git Error - 'fatal: Out of memory']]></title>
    <link href="http://JuliaLovel.github.io/blog/2013/08/08/solved-git-error-fatal-out-of-memory/"/>
    <updated>2013-08-08T17:56:00-05:00</updated>
    <id>http://JuliaLovel.github.io/blog/2013/08/08/solved-git-error-fatal-out-of-memory</id>
    <content type="html"><![CDATA[<p><strong>The Problem: You don&rsquo;t have enough RAM</strong></p>

<p>My regular dev machine, a MacBook Pro, crashed this week, and I found myself trying to get some work done on my old dev desktop while waiting on my genius bar appointment. I went to clone a project that I recently started working on, when I ran into this error:</p>

<p><code>
$ git clone
fatal: Out of memory, malloc failed
</code></p>

<p>This error happens when you have an existing repository that has been used on a machine with more RAM than the machine you&rsquo;re currently on. Git pack objects have been created in the repository that are larger than your available memory, so you can&rsquo;t clone or do other operations on the repo.</p>

<!-- more -->


<p><strong>Step 1: Get to a copy of your Repo</strong></p>

<p>To fix this error, you need to have a working copy of the repo on some machine that you have access to. Luckily for me, although my repo is hosted on github, I had a copy of it on my MacBook&rsquo;s backup drive.</p>

<p>So, First: Copy the repo to your machine, or just log on the machine where you have another copy hosted, if you&rsquo;re able. Now:</p>

<p><code>
$ cd my-repo/
</code></p>

<p><strong>Step 2: Find out how much RAM you have</strong></p>

<p>In my case, I didn&rsquo;t remember how much RAM was in my old machine. An easy command to check your memory in linux is:</p>

<p><code>
$ sudo lshw -short -C memory
</code></p>

<p><strong>Step 3: Repack your git objects</strong></p>

<p>Tell git to use however much available memory you have for the max-pack-size:</p>

<p><code>
$ git repack --max-pack-size=2M -a -d
</code></p>

<p>(Just replace &ldquo;2M&rdquo; with however much RAM you have.) The &ldquo;-d&rdquo; is important because it will delete the old pack objects that are too large in the process of repacking. That&rsquo;s it!</p>
]]></content>
  </entry>
  
</feed>
